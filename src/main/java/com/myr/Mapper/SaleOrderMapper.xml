<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myr.Mapper.SaleOrderMapper">

    <!--1.添加客戶-->
    <insert id="addSaleOrder" useGeneratedKeys="true" keyProperty="fid">
        INSERT INTO t_saleorder
        (`fid`, `billNo`, `GSBillNo`, `billDate`, `type`, `custId`, `finishType`, `settleId`, `currencyName`, `rate`,
        `remark`, `depId`, `depStaffId`, `billStaffId`, `editStaffId`, `checkerId`, `createDate`, `checkDate`, `updateDate`)
        VALUES
        (NULL, #{billNo}, #{GSBillNo}, #{billDate}, #{type}, #{custId}, #{finishType}, #{settleId}, #{currencyName}, #{rate},
        #{remark}, #{depId}, #{depStaffId}, #{billStaffId}, #{editStaffId}, #{checkerId}, now(), #{checkDate}, #{updateDate});
    </insert>

    <!--1 是规则表中的 销售订单规则-->
    <select id="getBillNo" resultType="String">
        SELECT GetBillNo(1,#{date});
    </select>

    <select id="getCounts_mrp" resultType="int">
        select
        count(*)
        from t_saleorder a LEFT JOIN t_saleorderentry b on a.fid = b.mid
        LEFT JOIN t_customer c on a.custId = c.fid
        LEFT JOIN t_settlement_method d on a.settleId = d.fid
        LEFT JOIN t_department e on a.depId = e.fid
        LEFT JOIN t_staff f on a.depStaffId = f.fid
        LEFT JOIN t_staff g on a.billStaffId = g.fid
        left join (
        select a.fid,a.defaultStorehouseId,b.`name` from t_item a left join t_store b on a.defaultStorehouseId = b.fid
        ) h on b.itemId = h.fid
        /*LEFT JOIN icstockbillentry i on b.mid = i.sourFid and b.entryId = i.sourEntryId and b.itemId = i.itemId*/
        where 1=1
        <if test="(date_start != null and date_start !='') or (date_end != null and date_end !='')">
            and a.billDate between #{date_start} and #{date_end}
        </if>
        <if test="suppId != null and suppId > 0">
            and a.custId = #{suppId}
        </if>
        <if test="cnm != null or cnm != ''">
            and (a.billNo like '%${cnm}%' or b.itemname like '%${cnm}%' or b.itemcode like '%${cnm}%' or b.itemmodel like '%${cnm}%')
        </if>
        <if test="range != null and range == 1">
            and b.ismrp = 0
            /*and b.qty-IfNULL(i.qty,0) > 0*/
        </if>
        <if test="range != null and range == 2">
            and b.ismrp = 1
            /*and b.qty-i.qty&lt;=0*/
        </if>
    </select>

    <select id="getCounts" resultType="int">
        select count(*)
        from t_saleorder a LEFT JOIN t_saleorderentry b on a.fid = b.mid
        LEFT JOIN t_customer c on a.custId = c.fid
        LEFT JOIN t_settlement_method d on a.settleId = d.fid
        LEFT JOIN t_department e on a.depId = e.fid
        LEFT JOIN t_staff f on a.depStaffId = f.fid
        LEFT JOIN t_staff g on a.billStaffId = g.fid
        LEFT JOIN icstockbillentry i on b.mid = i.sourFid and b.entryId = i.sourEntryId and b.itemId = i.itemId
        where 1=1
        <if test="suppId != null and suppId > 0">
            and a.custId = #{suppId}
        </if>
        <if test="cnm != null or cnm != ''">
            and (a.billNo like '%${cnm}%' or b.itemname like '%${cnm}%' or b.itemcode like '%${cnm}%' or b.itemmodel like '%${cnm}%')
        </if>
        <if test="range != null and range == 1">
            and b.qty-IfNULL(i.qty,0) > 0
        </if>
        <if test="range != null and range == 2">
            and b.qty-i.qty&lt;=0
        </if>
    </select>

    <select id="getCounts_index" resultType="int">
        select
            count(*)
        from t_saleorder a LEFT JOIN t_saleorderentry b on a.fid = b.mid
                           LEFT JOIN t_customer c on a.custId = c.fid
                           LEFT JOIN t_settlement_method d on a.settleId = d.fid
                           LEFT JOIN t_department e on a.depId = e.fid
                           LEFT JOIN t_staff f on a.depStaffId = f.fid
                           LEFT JOIN t_staff g on a.billStaffId = g.fid
        where 1=1
        <if test="str != null or str != ''">
            and (a.GSBillNo like '%${str}%' or c.name like '%${str}%' or b.itemname like '%${str}%' or b.itemcode like '%${str}%' or b.itemmodel like '%${str}%')
        </if>
    </select>

    <select id="SaleOrder_mrp" resultMap="SaleOrderMap">
        select
        a.*,b.fid as 'ffid',
        b.mid,b.entryid,b.itemId,b.itemcode,b.itemname,b.itemmodel,b.custitemcode,b.custitemmodel
        ,b.qty,b.custOrderNum,b.finishDate,b.batchNumber,b.taxPrice,b.taxPriceNo,b.fcess,b.taxAmt,b.taxAmtNo,b.fcessAmt,b.rowRemark as 'midRemark',b.source,
        c.`name` as 'custIdName',d.`name` as 'settleIdName',e.`name` as 'depIdName',
        g.`name` as 'billStaffIdName',f.`name` as 'depStaffIdName',/*i.qty as 'icsQty',*/
        h.defaultStorehouseId as 'stockId', h.name as 'stockName'
        from t_saleorder a LEFT JOIN t_saleorderentry b on a.fid = b.mid and b.ismrp = 0
        LEFT JOIN t_customer c on a.custId = c.fid
        LEFT JOIN t_settlement_method d on a.settleId = d.fid
        LEFT JOIN t_department e on a.depId = e.fid
        LEFT JOIN t_staff f on a.depStaffId = f.fid
        LEFT JOIN t_staff g on a.billStaffId = g.fid
        left join (
        select a.fid,a.defaultStorehouseId,b.`name` from t_item a left join t_store b on a.defaultStorehouseId = b.fid
        ) h on b.itemId = h.fid
        /*LEFT JOIN icstockbillentry i on b.mid = i.sourFid and b.entryId = i.sourEntryId and b.itemId = i.itemId*/
        where 1=1
        <if test="(date_start != null and date_start !='') or (date_end != null and date_end !='')">
            and a.billDate between #{date_start} and #{date_end}
        </if>
        <if test="suppId != null and suppId > 0">
            and a.custId = #{suppId}
        </if>
        <if test="cnm != null or cnm != ''">
            and (a.billNo like '%${cnm}%' or b.itemname like '%${cnm}%' or b.itemcode like '%${cnm}%' or b.itemmodel like '%${cnm}%')
        </if>
        <if test="range != null and range == 1">
            and b.ismrp = 0
            /*and b.qty-IfNULL(i.qty,0) > 0*/
        </if>
        <if test="range != null and range == 2">
            and b.ismrp = 1
            /*and b.qty-i.qty&lt;=0*/
        </if>
        order by b.mid,b.entryid
        limit #{startpage},#{pagesize}

    </select>

    <select id="SaleOrder_sour" resultMap="SaleOrderMap">
        select
        a.*,b.fid as 'ffid',
        b.mid,b.entryid,b.itemId,b.itemcode,b.itemname,b.itemmodel,b.custitemcode,b.custitemmodel
        ,b.qty,b.custOrderNum,b.finishDate,b.batchNumber,b.taxPrice,b.taxPriceNo,b.fcess,b.taxAmt,b.taxAmtNo,b.fcessAmt,b.rowRemark as 'midRemark',b.source,
        c.`name` as 'custIdName',d.`name` as 'settleIdName',e.`name` as 'depIdName',
        g.`name` as 'billStaffIdName',f.`name` as 'depStaffIdName',b.qty as 'icsQty',
        h.defaultStorehouseId as 'stockId', h.name as 'stockName'
        from t_saleorder a LEFT JOIN t_saleorderentry b on a.fid = b.mid
        LEFT JOIN t_customer c on a.custId = c.fid
        LEFT JOIN t_settlement_method d on a.settleId = d.fid
        LEFT JOIN t_department e on a.depId = e.fid
        LEFT JOIN t_staff f on a.depStaffId = f.fid
        LEFT JOIN t_staff g on a.billStaffId = g.fid
        left join (
        select a.fid,a.defaultStorehouseId,b.`name` from t_item a left join t_store b on a.defaultStorehouseId = b.fid
        ) h on b.itemId = h.fid
        LEFT JOIN icstockbillentry i on b.mid = i.sourFid and b.entryId = i.sourEntryId and b.itemId = i.itemId
        where 1=1
        <if test="(date_start != null and date_start !='') or (date_end != null and date_end !='')">
            and a.billDate between #{date_start} and #{date_end}
        </if>
        <if test="suppId != null and suppId > 0">
            and a.custId = #{suppId}
        </if>
        <if test="cnm != null or cnm != ''">
            and (a.billNo like '%${cnm}%' or b.itemname like '%${cnm}%' or b.itemcode like '%${cnm}%' or b.itemmodel like '%${cnm}%')
        </if>
        <if test="range != null and range == 1">
            and b.qty-IfNULL(i.qty,0) > 0
        </if>
        <if test="range != null and range == 2">
            and b.qty-i.qty&lt;=0
        </if>
        order by b.mid,b.entryid
        limit #{startpage},#{pagesize}

    </select>

    <select id="SaleOrder_page" resultMap="SaleOrderMap">
        select
        a.*,b.fid as 'ffid',
        b.mid,b.entryid,b.itemId,b.itemcode,b.itemname,b.itemmodel,b.custitemcode,b.custitemmodel
        ,b.qty,b.custOrderNum,b.finishDate,b.batchNumber,b.taxPrice,b.taxPriceNo,b.fcess,b.taxAmt,b.taxAmtNo,b.fcessAmt,b.rowRemark as 'midRemark',b.source,
        c.`name` as 'custIdName',d.`name` as 'settleIdName',e.`name` as 'depIdName',
        g.`name` as 'billStaffIdName',f.`name` as 'depStaffIdName'
        from t_saleorder a LEFT JOIN t_saleorderentry b on a.fid = b.mid
        LEFT JOIN t_customer c on a.custId = c.fid
        LEFT JOIN t_settlement_method d on a.settleId = d.fid
        LEFT JOIN t_department e on a.depId = e.fid
        LEFT JOIN t_staff f on a.depStaffId = f.fid
        LEFT JOIN t_staff g on a.billStaffId = g.fid
        where 1=1
        <if test="str != null or str != ''">
            and (a.GSBillNo like '%${str}%' or c.name like '%${str}%' or b.itemname like '%${str}%' or b.itemcode like '%${str}%' or b.itemmodel like '%${str}%')
        </if>
        order by a.billDate desc,a.billNo desc,b.entryId
        limit #{startpage},#{pagesize}
    </select>

    <select id="SaleOrder_pageGj" resultMap="SaleOrderMap">
        select
        a.*,b.fid as 'ffid',
        b.mid,b.entryid,b.itemId,b.itemcode,b.itemname,b.itemmodel,b.custitemcode,b.custitemmodel
        ,b.qty,b.custOrderNum,b.finishDate,b.batchNumber,b.taxPrice,b.taxPriceNo,b.fcess,b.taxAmt,b.taxAmtNo,b.fcessAmt,b.rowRemark as 'midRemark',b.source,
        c.`name` as 'custIdName',d.`name` as 'settleIdName',e.`name` as 'depIdName',
        g.`name` as 'billStaffIdName',f.`name` as 'depStaffIdName'
        from t_saleorder a LEFT JOIN t_saleorderentry b on a.fid = b.mid
        LEFT JOIN t_customer c on a.custId = c.fid
        LEFT JOIN t_settlement_method d on a.settleId = d.fid
        LEFT JOIN t_department e on a.depId = e.fid
        LEFT JOIN t_staff f on a.depStaffId = f.fid
        LEFT JOIN t_staff g on a.billStaffId = g.fid
        where a.GSBillNo like '%${data.GSBillNo}%'
        and b.custitemcode like '%${data.mid.itemIdFid.custItemCode}%'
        and b.custitemmodel like '%${data.mid.itemIdFid.custItemModel}%'
        and b.itemcode like '%${data.mid.itemIdFid.code}%'
        and b.itemmodel like '%${data.mid.itemIdFid.model}%'
        <if test="data.custId != null and data.custId >0">
            and a.custId = #{data.custId}
        </if>
        <if test="data.depId != null and data.depId >0">
            and a.depId = #{data.depId}
        </if>
        <if test="data.billStaffId != null and data.billStaffId >0">
            and a.billStaffId = #{data.billStaffId}
        </if>
        <if test="(date_start != null and date_start !='') or (date_end != null and date_end !='')">
            and a.billDate between #{date_start} and #{date_end}
        </if>

    </select>

    <select id="getSOById" resultType="com.myr.Bean.SaleOrder">
        select * from t_saleorder where fid = #{fid}
    </select>

    <resultMap id="SaleOrderMap" type="com.myr.Bean.SaleOrder">
        <id column="ffid" property="fid"/>
        <result column="billNo" property="billNo"/>
        <result column="GSBillNo" property="GSBillNo"/>
        <result column="billDate" property="billDate"/>
        <result column="type" property="type"/>
        <result column="custId" property="custId"/>
        <result column="finishType" property="finishType"/>
        <result column="settleId" property="settleId"/>
        <result column="currencyName" property="currencyName"/>
        <result column="rate" property="rate"/>
        <result column="remark" property="remark"/>
        <result column="depId" property="depId"/>
        <result column="depStaffId" property="depStaffId"/>
        <result column="billStaffId" property="billStaffId"/>
        <result column="editStaffId" property="editStaffId"/>
        <result column="checkerId" property="checkerId"/>
        <result column="createDate" property="checkDate"/>
        <result column="updateDate" property="updateDate"/>

        <!--订单体-->
        <collection property="mid" javaType="com.myr.Bean.SaleOrderEntry">
            <id column="fid" property="fid"/>
            <result column="entryId" property="entryId"/>
            <result column="itemId" property="itemId"/>
            <result column="itemCode" property="itemCode"/>
            <result column="itemName" property="itemName"/>
            <result column="itemModel" property="itemModel"/>
            <result column="custItemCode" property="custItemCode"/>
            <result column="custItemModel" property="custItemModel"/>
            <result column="qty" property="qty"/>
            <result column="custOrderNum" property="custOrderNum"/>
            <result column="finishDate" property="finishDate"/>
            <result column="batchNumber" property="batchNumber"/>
            <result column="taxPrice" property="taxPrice"/>
            <result column="taxPriceNo" property="taxPriceNo"/>
            <result column="fcess" property="fcess"/>
            <result column="taxAmt" property="taxAmt"/>
            <result column="taxAmtNo" property="taxAmtNo"/>
            <result column="fcessAmt" property="fcessAmt"/>
            <result column="midRemark" property="rowRemark"/>
            <result column="source" property="source"/>
            <result property="sourFid" column="sourFid"/>
            <result property="sourBillNo" column="sourBillNo"/>
            <result property="sourEntryId" column="sourEntryId"/>
            <result property="sourType" column="sourType"/>
            <result property="icsQty" column="icsQty"/>

        </collection>

        <!--客户-->
        <collection property="custIdFid" javaType="com.myr.Bean.Customer">
            <id column="fid" property="fid"/>
            <result column="custIdName" property="name"/>
        </collection>

        <!--结算方式-->
        <collection property="settleIdFid" javaType="com.myr.Bean.SettlementMethod">
            <id column="fid" property="fid"/>
            <result column="settleIdName" property="name"/>
        </collection>

        <!--部门-->
        <collection property="depIdFid" javaType="com.myr.Bean.Department">
            <id column="fid" property="fid"/>
            <result column="depIdName" property="name"/>
        </collection>

        <!--职员 部门负责人-->
        <collection property="depStaffIdFid" javaType="com.myr.Bean.Staff">
            <id column="fid" property="fid"/>
            <result column="depStaffIdName" property="name"/>
        </collection>

        <!--职员 制单人-->
        <collection property="billStaffIdFid" javaType="com.myr.Bean.Staff">
            <id column="fid" property="fid"/>
            <result column="billStaffIdName" property="name"/>
        </collection>

        <!--仓库 item默认仓库-->
        <collection property="stockId" javaType="com.myr.Bean.Store">
            <id column="stockId" property="fid"/>
            <result column="stockName" property="name"/>
        </collection>
    </resultMap>

    <select id="SaleOrder_isQuoted" resultType="String">
        /*销售出库*/
        select distinct a.billNo from icstockbill a
        inner JOIN icstockbillentry b on a.fid = b.mid and b.sourType = '销售订单'
        where b.sourFid = #{fid}

        union all  /*生产计划单*/
        select distinct billNo from	mrp_productplan where sourType = '销售订单' and sourFid = #{fid}

        union all /*采购申请单*/
        select distinct billNo from	mrp_pur_req where sourType = '销售订单' and sourFid = #{fid}

        union all /*生产备料单*/
        select distinct billNo from	mrp_backmater where sourType = '销售订单' and sourFid = #{fid}
    </select>

    <delete id="SaleOrder_del_body">
        delete from t_saleorderentry
        where mid = #{fid}
    </delete>

    <delete id="delSaleOrder">
        delete from t_saleorder
        where fid = #{fid}
    </delete>

    <update id="SaleOrder_update">
        UPDATE t_saleorder SET `billDate` = #{billDate}, `type` = #{type}, `custId` = #{custId}, `finishType` = #{finishType}, `settleId` = #{settleId}, `currencyName` = #{currencyName}, `rate` = #{rate}, `remark` = #{remark}, `depId` = #{depId}, `depStaffId` = #{depStaffId}, `billStaffId` = #{billStaffId}, `editStaffId` = #{editStaffId}, `checkerId` = #{checkerId}, `updateDate` = now()
        WHERE `fid` = #{fid};
    </update>


</mapper>